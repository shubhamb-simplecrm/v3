const tabpanels = [
  {
    label: "Field Visibility",
    key: 0,
    content: "Conditions making field visible:",
    conditions: "none",
    tab: "visible",
  },
  {
    label: "Mandatory Inputs",
    key: 1,
    content: "Conditions making Mandatory Inputs:",
    conditions: "none",
    tab: "required",
  },
  {
    label: "Read Only Requirements",
    key: 2,
    content: "Conditions making Read Only Requirements:",
    conditions: "none",
    tab: "readOnly",
  },
  {
    label: "Valid Requirements",
    key: 3,
    content: "Conditions making Invalid Requirements:",
    conditions: "none",
    tab: "invalid",
  },
  {
    label: "Masking Requirements",
    key: 4,
    content: "Conditions required for Masking:",
    conditions: "none",
    tab: "masking",
  },
  {
    label: "Regular Expression Validation",
    key: 5,
    content: "Conditions for validating the selected field:",
    conditions: "none",
    tab: "validation",
  },
];

const parentField = {
  parent_name: {
    field_key: "parent_name",
    name: "parent_name",
    label: "Parent Name",
    type: "parent",
    required: "false",
    comment: null,
    massupdate: "false",
    dom: "parent_type_display",
    // options: {
    //   Leads: "Lead",
    //   Accounts: "Account",
    // },
    id_name: "parent_name",
    parent_id: "",
  },
  parent_id: {
    field_key: "parent_name",
    name: "parent_name",
    label: "Parent Id",
    type: "parent",
    required: "false",
    comment: null,
    massupdate: "false",
    dom: "parent_type_display",
    // options: {
    //   Leads: "Lead",
    //   Accounts: "Account",
    // },
    id_name: "parent_name",
    parent_id: "",
  },
  parent_type: {
    field_key: "parent_name",
    name: "parent_name",
    label: "Parent Type",
    type: "parent",
    required: "false",
    comment: null,
    massupdate: "false",
    dom: "parent_type_display",
    // options: {
    //   Leads: "Lead",
    //   Accounts: "Account",
    // },
    id_name: "parent_name",
    parent_id: "",
  },
};
const reminderTimeField = {
  email_reminder_time: {
    field_key: "email_reminder_time",
    name: "reminder_time",
    label: "Email Reminder Time",
    type: "reminder_time",
    required: "false",
    comment:
      "Specifies when a reminder alert should be issued; -1 means no alert; otherwise the number of seconds prior to the start",
    massupdate: "false",
    value: {
      email_reminder_checked: null,
      email_reminder_time: null,
      reminder_checked: null,
      reminder_time: null,
    },
    dom: "reminder_time_options",
    // options: {
    //   60: "1 minute prior",
    //   300: "5 minutes prior",
    //   600: "10 minutes prior",
    //   900: "15 minutes prior",
    //   1800: "30 minutes prior",
    //   3600: "1 hour prior",
    //   7200: "2 hours prior",
    //   10800: "3 hours prior",
    //   18000: "5 hours prior",
    //   86400: "1 day prior",
    // },
  },
  popup_reminder_time: {
    field_key: "popup_reminder_time",
    name: "reminder_time",
    label: "Popup Reminder Time",
    type: "reminder_time",
    required: "false",
    comment:
      "Specifies when a reminder alert should be issued; -1 means no alert; otherwise the number of seconds prior to the start",
    massupdate: "false",
    value: {
      email_reminder_checked: null,
      email_reminder_time: null,
      reminder_checked: null,
      reminder_time: null,
    },
    dom: "reminder_time_options",
    // options: {
    //   60: "1 minute prior",
    //   300: "5 minutes prior",
    //   600: "10 minutes prior",
    //   900: "15 minutes prior",
    //   1800: "30 minutes prior",
    //   3600: "1 hour prior",
    //   7200: "2 hours prior",
    //   10800: "3 hours prior",
    //   18000: "5 hours prior",
    //   86400: "1 day prior",
    // },
  },
};

const customTypes = {
  enum: "multiselect",
  multienum: "multiselect",
  text: "textarea",
  bool: "checkbox",
  radioenum: "radio",
  dynamicenum: "multiselect",
};
const operatorsList = [
  { name: "equals", label: "Equals" },
  { name: "notEquals", label: "Not Equals" },
  { name: "<", label: "<" },
  { name: ">", label: ">" },
  { name: "<=", label: "<=" },
  { name: ">=", label: ">=" },
  { name: "contains", label: "Contains" },
  { name: "notContains", label: "Not Contains" },
  { name: "startsWith", label: "Starts With" },
  { name: "endsWith", label: "Ends With" },
  { name: "null", label: "Is Null" },
  { name: "notNull", label: "Is Not Null" },
  { name: "isTrue", label: "Is True" },
  { name: "isFalse", label: "Is False" },
  { name: "matches", label: "Matches" },
];
const combinatorsList = [
  { name: "and", label: "AND" },
  { name: "or", label: "OR" },
  { name: "not", label: "NOT" },
];
const excludeFields = {
  0: ["image", "address"],
  1: ["image", "address"],
  2: ["image", "address"],
  3: ["image", "address"],
  4: ["bool", "image", "address"],
  5: [
    "bool",
    "relate",
    "html",
    "enum",
    "multienum",
    "dynamicenum",
    "address",
    "date",
    "datetime",
    "datetimecombo",
    "image",
    "radioenum",
    "parent",
    "image",
  ],  
};

export {
  tabpanels,
  combinatorsList,
  operatorsList,
  customTypes,
  reminderTimeField,
  parentField,
  excludeFields,
};
